name: Build

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:
env:
  LATEST_PY_VERSION: '3.13'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies, with caching
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Install dependencies
        run: |
          uv python install ${{ matrix.python-version }}
          uv sync --frozen

      - name: Run unit tests
        run: uv run pytest
      # Really basic test script just to make sure nothing blows up
      # TODO: Actual unit tests using click.testing.CliRunner
      - name: Run smoke tests
        run: |
          source .venv/bin/activate
          mkdir -p ./tmp/dir_1/dir_2
          touch ./tmp/file_1
          touch ./tmp/dir_1/file_2
          touch ./tmp/dir_1/dir_2/file_3
          ssc add test ./tmp
          ssc ls
          ssc backup test
          ssc ls test
          ssc restore test
          find ./tmp
          rm -rf ./tmp

#      - name: Generate code coverage report
#        run: pytest --cov --cov-report=term --cov-report=html
#      - name: Send code coverage report to Coveralls
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: coveralls --service=github

  # Run code analysis checks
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.LATEST_PY_VERSION }}
      - name: Run style checks and linting via pre-commit hooks
        uses: pre-commit/action@v3.0.1

  # Deploy for tags only
  release:
    needs: [test, analyze]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Install dependencies
        run: uv python install ${{ env.LATEST_PY_VERSION }}
      - name: Build package distributions
        run: uv build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
